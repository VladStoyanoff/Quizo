%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: e5e4abce8f0a69e4a9c33fb08578a42f, type: 3}
  m_Name: New Question 4
  m_EditorClassIdentifier: 
  question: If you were programming an application that allowed users to configure
    their own vehicles, how would you use the concept of inheritance to structure
    the code in a way that minimized redundancies?
  answers:
  - " Create a base \u201CCar\u201D class, then create derived classes for different
    types of cars. "
  - "Create a namespace called \u201CCars\u201D and put all vehicle types in that
    namespace."
  - " Create a \u201CCar\u201D event, and have all vehicle types inherit from that
    event."
  - " Create a method called \u201CInheritCarBehavior\u201D, which pulls in the functionality
    for a car."
  correctAnswerIndex: 0
